/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { ArrakisV2, ArrakisV2Interface } from "../../contracts/ArrakisV2";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint24[]",
        name: "feeTiers",
        type: "uint24[]",
      },
    ],
    name: "LogAddPools",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "routers",
        type: "address[]",
      },
    ],
    name: "LogBlacklistRouters",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "fee0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee1",
        type: "uint256",
      },
    ],
    name: "LogCollectedFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "pools",
        type: "address[]",
      },
    ],
    name: "LogRemovePools",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "init0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "init1",
        type: "uint256",
      },
    ],
    name: "LogSetInits",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newManager",
        type: "address",
      },
    ],
    name: "LogSetManager",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "managerFeeBPS",
        type: "uint16",
      },
    ],
    name: "LogSetManagerFeeBPS",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "routers",
        type: "address[]",
      },
    ],
    name: "LogWhitelistRouters",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    name: "LogWithdrawManagerBalance",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint24[]",
        name: "feeTiers_",
        type: "uint24[]",
      },
    ],
    name: "addPools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "routers_",
        type: "address[]",
      },
    ],
    name: "blacklistRouters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "burnAmount_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver_",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getPools",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRanges",
    outputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "lowerTick",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "upperTick",
            type: "int24",
          },
          {
            internalType: "uint24",
            name: "feeTier",
            type: "uint24",
          },
        ],
        internalType: "struct Range[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouters",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "init0",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "init1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint24[]",
            name: "feeTiers",
            type: "uint24[]",
          },
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "init0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "init1",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "manager",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "routers",
            type: "address[]",
          },
          {
            internalType: "address",
            name: "factory",
            type: "address",
          },
        ],
        internalType: "struct InitializePayload",
        name: "params_",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "managerBalance0",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "managerBalance1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "managerFeeBPS",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mintAmount_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver_",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                components: [
                  {
                    internalType: "int24",
                    name: "lowerTick",
                    type: "int24",
                  },
                  {
                    internalType: "int24",
                    name: "upperTick",
                    type: "int24",
                  },
                  {
                    internalType: "uint24",
                    name: "feeTier",
                    type: "uint24",
                  },
                ],
                internalType: "struct Range",
                name: "range",
                type: "tuple",
              },
            ],
            internalType: "struct PositionLiquidity[]",
            name: "burns",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                components: [
                  {
                    internalType: "int24",
                    name: "lowerTick",
                    type: "int24",
                  },
                  {
                    internalType: "int24",
                    name: "upperTick",
                    type: "int24",
                  },
                  {
                    internalType: "uint24",
                    name: "feeTier",
                    type: "uint24",
                  },
                ],
                internalType: "struct Range",
                name: "range",
                type: "tuple",
              },
            ],
            internalType: "struct PositionLiquidity[]",
            name: "mints",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "payload",
                type: "bytes",
              },
              {
                internalType: "address",
                name: "router",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "expectedMinReturn",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "zeroForOne",
                type: "bool",
              },
            ],
            internalType: "struct SwapPayload",
            name: "swap",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "minBurn0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minBurn1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minDeposit0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minDeposit1",
            type: "uint256",
          },
        ],
        internalType: "struct Rebalance",
        name: "rebalanceParams_",
        type: "tuple",
      },
    ],
    name: "rebalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "pools_",
        type: "address[]",
      },
    ],
    name: "removePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "init0_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "init1_",
        type: "uint256",
      },
    ],
    name: "setInits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "manager_",
        type: "address",
      },
    ],
    name: "setManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "managerFeeBPS_",
        type: "uint16",
      },
    ],
    name: "setManagerFeeBPS",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token0",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount0Owed_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Owed_",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "uniswapV3MintCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "routers_",
        type: "address[]",
      },
    ],
    name: "whitelistRouters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawManagerBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052306080523480156200001557600080fd5b506200002062000026565b62000156565b6200003260ff62000035565b50565b60008054610100900460ff1615620000ce578160ff1660011480156200006e57506200006c306200014760201b6200241d1760201c565b155b620000c65760405162461bcd60e51b815260206004820152602e6024820152600080516020620048c583398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b506000919050565b60005460ff8084169116106200012d5760405162461bcd60e51b815260206004820152602e6024820152600080516020620048c583398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401620000bd565b506000805460ff191660ff92909216919091179055600190565b6001600160a01b03163b151590565b6080516147376200018e600039600081816109c701528181610a5101528181611531015281816115b601526116a001526147376000f3fe6080604052600436106102c65760003560e01c806370a0823111610179578063a5ff1dc7116100d6578063d34879971161008a578063f2fde38b11610064578063f2fde38b14610896578063f88c31ce146108b6578063fcd3533c146108cb57600080fd5b8063d3487997146107fc578063dd62ed3e1461081c578063f2eb3e341461086257600080fd5b8063ccdf7a02116100bb578063ccdf7a021461075d578063d0ebdbe71461079f578063d21220a7146107bf57600080fd5b8063a5ff1dc71461071d578063a9059cbb1461073d57600080fd5b80638da5cb5b1161012d57806394bf804d1161011257806394bf804d146106b357806395d89b41146106e8578063a457c2d7146106fd57600080fd5b80638da5cb5b1461067557806392e49dfd1461069357600080fd5b80637ecd67171161015e5780637ecd67171461062057806386ac1cb9146106355780638712e4971461065557600080fd5b806370a08231146105d5578063715018a61461060b57600080fd5b80633f7b6135116102275780634b164140116101db57806352d1902d116101c057806352d1902d1461057c578063617a341914610591578063673a2a1f146105b357600080fd5b80634b164140146105495780634f1ef2861461056957600080fd5b80634794c84a1161020c5780634794c84a146104cc578063481c6a75146104ec578063487daf391461052957600080fd5b80633f7b61351461047857806342fb9d441461049857600080fd5b806318160ddd1161027e578063313ce56711610263578063313ce5671461041a5780633659cfe614610436578063395093511461045857600080fd5b806318160ddd146103e557806323b872dd146103fa57600080fd5b8063095ea7b3116102af578063095ea7b3146103305780630dfe16811461036057806314b80630146103b157600080fd5b8063065756db146102cb57806306fdde031461030e575b600080fd5b3480156102d757600080fd5b507fe3ad27f6776c50a3e2a472a1ca98705922a7e91abcd31c1ccc4121e91e8cee3e545b6040519081526020015b60405180910390f35b34801561031a57600080fd5b506103236108eb565b6040516103059190613cd0565b34801561033c57600080fd5b5061035061034b366004613d23565b61097d565b6040519015158152602001610305565b34801561036c57600080fd5b507fe3ad27f6776c50a3e2a472a1ca98705922a7e91abcd31c1ccc4121e91e8cee39546001600160a01b03165b6040516001600160a01b039091168152602001610305565b3480156103bd57600080fd5b507fe3ad27f6776c50a3e2a472a1ca98705922a7e91abcd31c1ccc4121e91e8cee3b546102fb565b3480156103f157600080fd5b506067546102fb565b34801561040657600080fd5b50610350610415366004613d4f565b610997565b34801561042657600080fd5b5060405160128152602001610305565b34801561044257600080fd5b50610456610451366004613d90565b6109bd565b005b34801561046457600080fd5b50610350610473366004613d23565b610b3d565b34801561048457600080fd5b50610456610493366004613dad565b610b7c565b3480156104a457600080fd5b507fe3ad27f6776c50a3e2a472a1ca98705922a7e91abcd31c1ccc4121e91e8cee3f546102fb565b3480156104d857600080fd5b506104566104e7366004613dcf565b610ce1565b3480156104f857600080fd5b507fe3ad27f6776c50a3e2a472a1ca98705922a7e91abcd31c1ccc4121e91e8cee40546001600160a01b0316610399565b34801561053557600080fd5b50610456610544366004613e3c565b610ea4565b34801561055557600080fd5b50610456610564366004613f1d565b6113d5565b610456610577366004613f75565b611527565b34801561058857600080fd5b506102fb611693565b34801561059d57600080fd5b506105a6611758565b6040516103059190614039565b3480156105bf57600080fd5b506105c86117ed565b604051610305919061409e565b3480156105e157600080fd5b506102fb6105f0366004613d90565b6001600160a01b031660009081526065602052604090205490565b34801561061757600080fd5b506104566118ce565b34801561062c57600080fd5b50610456611934565b34801561064157600080fd5b50610456610650366004613f1d565b61199a565b34801561066157600080fd5b506104566106703660046140eb565b611a93565b34801561068157600080fd5b506033546001600160a01b0316610399565b34801561069f57600080fd5b506104566106ae366004613f1d565b611bc8565b3480156106bf57600080fd5b506106d36106ce366004614126565b611d1a565b60408051928352602083019190915201610305565b3480156106f457600080fd5b50610323611e29565b34801561070957600080fd5b50610350610718366004613d23565b611e38565b34801561072957600080fd5b50610456610738366004613f1d565b611eed565b34801561074957600080fd5b50610350610758366004613d23565b611f51565b34801561076957600080fd5b507fe3ad27f6776c50a3e2a472a1ca98705922a7e91abcd31c1ccc4121e91e8cee3d5460405161ffff9091168152602001610305565b3480156107ab57600080fd5b506104566107ba366004613d90565b611f5f565b3480156107cb57600080fd5b507fe3ad27f6776c50a3e2a472a1ca98705922a7e91abcd31c1ccc4121e91e8cee3a546001600160a01b0316610399565b34801561080857600080fd5b50610456610817366004614156565b6120e3565b34801561082857600080fd5b506102fb6108373660046141a9565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205490565b34801561086e57600080fd5b507fe3ad27f6776c50a3e2a472a1ca98705922a7e91abcd31c1ccc4121e91e8cee3c546102fb565b3480156108a257600080fd5b506104566108b1366004613d90565b6120f3565b3480156108c257600080fd5b506105c86121d2565b3480156108d757600080fd5b506106d36108e6366004614126565b6122ab565b6060606880546108fa906141d7565b80601f0160208091040260200160405190810160405280929190818152602001828054610926906141d7565b80156109735780601f1061094857610100808354040283529160200191610973565b820191906000526020600020905b81548152906001019060200180831161095657829003601f168201915b5050505050905090565b60003361098b81858561242c565b60019150505b92915050565b6000336109a5858285612550565b6109b08585856125dc565b60019150505b9392505050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610a4f5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b60648201526084015b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610aaa7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b031614610b155760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608401610a46565b610b1e816127d9565b60408051600080825260208201909252610b3a91839190612833565b50565b3360008181526066602090815260408083206001600160a01b038716845290915281205490919061098b9082908690610b77908790614227565b61242c565b6033546001600160a01b03163314610bd65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a46565b6000821180610be55750600081115b610c155760405162461bcd60e51b81526020600482015260016024820152604960f81b6044820152606401610a46565b60675415610c4a5760405162461bcd60e51b8152602060048201526002602482015261545360f01b6044820152606401610a46565b7fe3ad27f6776c50a3e2a472a1ca98705922a7e91abcd31c1ccc4121e91e8cee3b8290557fe3ad27f6776c50a3e2a472a1ca98705922a7e91abcd31c1ccc4121e91e8cee3c81905560408051838152602081018390526000805160206146bb833981519152917ff8966e026442bb0adb17149a6d44e394d2b6eb3c5cc1dc71b3c0698000548ae691015b60405180910390a1505050565b7fe3ad27f6776c50a3e2a472a1ca98705922a7e91abcd31c1ccc4121e91e8cee40546000805160206146bb833981519152906001600160a01b03163314610d4f5760405162461bcd60e51b81526020600482015260026024820152614e4d60f01b6044820152606401610a46565b600260975403610da15760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610a46565b600260975561271061ffff83161115610de25760405162461bcd60e51b81526020600482015260036024820152624d464f60e81b6044820152606401610a46565b60006000805160206146bb833981519152905073__$31e7c80c9858d74690b1c93860b2d1be06$__63668716336040518163ffffffff1660e01b815260040160006040518083038186803b158015610e3957600080fd5b505af4158015610e4d573d6000803e3d6000fd5b5050505060058101805461ffff191661ffff85169081179091556040519081527fa73ff0774d4c8681f79fa6546f34bab7a3037f3b3aab405401a1fd8c6e5ca3d69060200160405180910390a15050600160975550565b6000610eb060016129d8565b90508015610ec8576000805461ff0019166101001790555b6000610ed4838061423f565b905011610f095760405162461bcd60e51b815260206004820152600360248201526213919560ea1b6044820152606401610a46565b6000610f1b6040840160208501613d90565b6001600160a01b031603610f565760405162461bcd60e51b8152602060048201526002602482015261054360f41b6044820152606401610a46565b610f666060830160408401613d90565b6001600160a01b0316610f7f6040840160208501613d90565b6001600160a01b031610610fbb5760405162461bcd60e51b815260206004820152600360248201526257544f60e81b6044820152606401610a46565b6000610fcd6080840160608501613d90565b6001600160a01b0316036110095760405162461bcd60e51b815260206004820152600360248201526227a0ad60e91b6044820152606401610a46565b600061101b60e0840160c08501613d90565b6001600160a01b0316036110575760405162461bcd60e51b815260206004820152600360248201526226a0ad60e91b6044820152606401610a46565b60008260800135118061106e575060008260a00135115b61109e5760405162461bcd60e51b81526020600482015260016024820152604960f81b6044820152606401610a46565b60006110b261012084016101008501613d90565b6001600160a01b0316036110ed5760405162461bcd60e51b81526020600482015260026024820152612d2360f11b6044820152606401610a46565b60006000805160206146bb833981519152905061117387878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8b018190048102820181019092528981529250899150889081908401838280828437600092019190915250612af392505050565b61117b612b68565b611183612bdb565b61119561012084016101008501613d90565b81546001600160a01b0319166001600160a01b03919091161781556111e26111bd848061423f565b6111cd6040870160208801613d90565b6111dd6060880160408901613d90565b612c46565b6111f26040840160208501613d90565b6001820180546001600160a01b0319166001600160a01b03929092169190911790556112246060840160408501613d90565b6002820180546001600160a01b0319166001600160a01b039290921691909117905561125b61125660e085018561423f565b612dcc565b61127361126e6080850160608601613d90565b612f5f565b61128360e0840160c08501613d90565b6008820180546001600160a01b0319166001600160a01b03929092169190911790556080830135600382015560a083013560048201557f1b402611d70c7735d942445aaa3ebbf878149bece6b797870b44a581c5f7f4c96112e4848061423f565b6040516112f292919061429c565b60405180910390a1604080516080850135815260a085013560208201527ff8966e026442bb0adb17149a6d44e394d2b6eb3c5cc1dc71b3c0698000548ae6910160405180910390a17f9b6ffaf4cbfd923495440b7f17ced9394289f001b3ead53ab67e2c3f3e39b0f561136b60e0850160c08601613d90565b6040516001600160a01b03909116815260200160405180910390a15080156113cd576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b6033546001600160a01b0316331461142f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a46565b6000805160206146bb83398151915260005b828110156114f55761147d84848381811061145e5761145e6142e4565b90506020020160208101906114739190613d90565b600a840190612fb1565b6114ae5760405162461bcd60e51b815260206004820152600260248201526104e560f41b6044820152606401610a46565b6114e28484838181106114c3576114c36142e4565b90506020020160208101906114d89190613d90565b600a840190612fd3565b50806114ed816142fa565b915050611441565b507f024551cce253d1a442bfe99dae530a00a492fb8c67c4456cce3c9d23eecd39618383604051610cd4929190614313565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036115b45760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608401610a46565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661160f7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b03161461167a5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608401610a46565b611683826127d9565b61168f82826001612833565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146117335760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610a46565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b606060006000805160206146bb8339815191526009810180546040805160208084028201810190925282815293945060009084015b828210156117e35760008481526020908190206040805160608101825291850154600281810b845263010000008204900b838501526601000000000000900462ffffff169082015282526001909201910161178d565b5050505091505090565b60606000805160206146bb83398151915260006118297fe3ad27f6776c50a3e2a472a1ca98705922a7e91abcd31c1ccc4121e91e8cee42612fe8565b905060008167ffffffffffffffff81111561184657611846613f5f565b60405190808252806020026020018201604052801561186f578160200160208202803683370190505b50905060005b828110156118c65761188a600a850182612ff2565b82828151811061189c5761189c6142e4565b6001600160a01b0390921660209283029190910190910152806118be816142fa565b915050611875565b509392505050565b6033546001600160a01b031633146119285760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a46565b6119326000612f5f565b565b6002609754036119865760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610a46565b6002609755611993612ffe565b6001609755565b6033546001600160a01b031633146119f45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a46565b7fe3ad27f6776c50a3e2a472a1ca98705922a7e91abcd31c1ccc4121e91e8cee39547fe3ad27f6776c50a3e2a472a1ca98705922a7e91abcd31c1ccc4121e91e8cee3a546000805160206146bb83398151915291611a6291859185916001600160a01b039182169116612c46565b7f1b402611d70c7735d942445aaa3ebbf878149bece6b797870b44a581c5f7f4c98383604051610cd492919061429c565b7fe3ad27f6776c50a3e2a472a1ca98705922a7e91abcd31c1ccc4121e91e8cee40546000805160206146bb833981519152906001600160a01b03163314611b015760405162461bcd60e51b81526020600482015260026024820152614e4d60f01b6044820152606401610a46565b600260975403611b535760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610a46565b600260975560405163024ba9fd60e21b815273__$31e7c80c9858d74690b1c93860b2d1be06$__9063092ea7f490611b8f90859060040161452b565b60006040518083038186803b158015611ba757600080fd5b505af4158015611bbb573d6000803e3d6000fd5b5050600160975550505050565b6033546001600160a01b03163314611c225760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a46565b6000805160206146bb83398151915260005b82811015611ce857611c70848483818110611c5157611c516142e4565b9050602002016020810190611c669190613d90565b600c840190612fb1565b611ca15760405162461bcd60e51b8152602060048201526002602482015261525760f01b6044820152606401610a46565b611cd5848483818110611cb657611cb66142e4565b9050602002016020810190611ccb9190613d90565b600c840190612fd3565b5080611ce0816142fa565b915050611c34565b507fbe6c83115c5bf7fd07e41c6002394841bd7dc0348f3b7c58645e8950f604f5c48383604051610cd4929190614313565b600080600260975403611d6f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610a46565b60026097556000611d7f60675490565b60405163020da84160e61b8152600481018790526001600160a01b03861660248201526044810182905290915073__$31e7c80c9858d74690b1c93860b2d1be06$__9063836a1040906064016040805180830381865af4158015611de7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e0b91906145df565b9093509150611e1a84866131a6565b50600160975590939092509050565b6060606980546108fa906141d7565b3360008181526066602090815260408083206001600160a01b038716845290915281205490919083811015611ed55760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610a46565b611ee2828686840361242c565b506001949350505050565b6033546001600160a01b03163314611f475760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a46565b61168f8282612dcc565b60003361098b8185856125dc565b6033546001600160a01b03163314611fb95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a46565b60026097540361200b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610a46565b600260975560006000805160206146bb833981519152905073__$31e7c80c9858d74690b1c93860b2d1be06$__63668716336040518163ffffffff1660e01b815260040160006040518083038186803b15801561206757600080fd5b505af415801561207b573d6000803e3d6000fd5b50505050612087612ffe565b6008810180546001600160a01b0319166001600160a01b0384169081179091556040519081527f9b6ffaf4cbfd923495440b7f17ced9394289f001b3ead53ab67e2c3f3e39b0f59060200160405180910390a150506001609755565b6120ed8484613285565b50505050565b6033546001600160a01b0316331461214d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a46565b6001600160a01b0381166121c95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610a46565b610b3a81612f5f565b60606000805160206146bb833981519152600061220e7fe3ad27f6776c50a3e2a472a1ca98705922a7e91abcd31c1ccc4121e91e8cee44612fe8565b905060008167ffffffffffffffff81111561222b5761222b613f5f565b604051908082528060200260200182016040528015612254578160200160208202803683370190505b50905060005b828110156118c65761226f600c850182612ff2565b828281518110612281576122816142e4565b6001600160a01b0390921660209283029190910190910152806122a3816142fa565b91505061225a565b6000806002609754036123005760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610a46565b6002609755836123375760405162461bcd60e51b8152602060048201526002602482015261424160f01b6044820152606401610a46565b600061234260675490565b9050600081116123795760405162461bcd60e51b8152602060048201526002602482015261545360f01b6044820152606401610a46565b612383338661332d565b604051634f752fb360e11b8152600481018690526001600160a01b03851660248201526044810182905273__$31e7c80c9858d74690b1c93860b2d1be06$__90639eea5f66906064016040805180830381865af41580156123e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061240c91906145df565b600160975590969095509350505050565b6001600160a01b03163b151590565b6001600160a01b03831661248e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610a46565b6001600160a01b0382166124ef5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610a46565b6001600160a01b0383811660008181526066602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383811660009081526066602090815260408083209386168352929052205460001981146120ed57818110156125cf5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610a46565b6120ed848484840361242c565b6001600160a01b0383166126585760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610a46565b6001600160a01b0382166126ba5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610a46565b6001600160a01b038316600090815260656020526040902054818110156127495760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610a46565b6001600160a01b03808516600090815260656020526040808220858503905591851681529081208054849290612780908490614227565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516127cc91815260200190565b60405180910390a36120ed565b6033546001600160a01b03163314610b3a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a46565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561286b576128668361347b565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156128c5575060408051601f3d908101601f191682019092526128c291810190614603565b60015b6129375760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f7420555550530000000000000000000000000000000000006064820152608401610a46565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc81146129cc5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c655555494400000000000000000000000000000000000000000000006064820152608401610a46565b50612866838383613539565b60008054610100900460ff1615612a66578160ff1660011480156129fb5750303b155b612a5e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610a46565b506000919050565b60005460ff808416911610612ad45760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610a46565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff16612b5e5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610a46565b61168f828261355e565b600054610100900460ff16612bd35760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610a46565b6119326135f0565b600054610100900460ff166119325760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610a46565b6000805160206146bb83398151915260005b848110156113cd5781546000906001600160a01b0316631698ee8286868a8a87818110612c8757612c876142e4565b9050602002016020810190612c9c919061461c565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b03938416600482015292909116602483015262ffffff166044820152606401602060405180830381865afa158015612d0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d2f9190614637565b90506001600160a01b038116612d6c5760405162461bcd60e51b81526020600482015260026024820152615a4160f01b6044820152606401610a46565b612d79600a840182612fb1565b15612daa5760405162461bcd60e51b81526020600482015260016024820152600560fc1b6044820152606401610a46565b612db7600a84018261365b565b50508080612dc4906142fa565b915050612c58565b6000805160206146bb83398151915260005b82811015612f2d5760018201546001600160a01b0316848483818110612e0657612e066142e4565b9050602002016020810190612e1b9190613d90565b6001600160a01b031614158015612e6e575060028201546001600160a01b0316848483818110612e4d57612e4d6142e4565b9050602002016020810190612e629190613d90565b6001600160a01b031614155b612e9f5760405162461bcd60e51b8152602060048201526002602482015261149560f21b6044820152606401610a46565b612eb4848483818110611c5157611c516142e4565b15612ee65760405162461bcd60e51b815260206004820152600260248201526121a960f11b6044820152606401610a46565b612f1a848483818110612efb57612efb6142e4565b9050602002016020810190612f109190613d90565b600c84019061365b565b5080612f25816142fa565b915050612dde565b507f102656122b5bfb41d864259a385db02d34584f3a71b6c6c35c14cbdaf9038fe68383604051610cd4929190614313565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038116600090815260018301602052604081205415156109b6565b60006109b6836001600160a01b038416613670565b6000610991825490565b60006109b68383613763565b7fe3ad27f6776c50a3e2a472a1ca98705922a7e91abcd31c1ccc4121e91e8cee3e80547fe3ad27f6776c50a3e2a472a1ca98705922a7e91abcd31c1ccc4121e91e8cee3f80546000938490559290556000805160206146bb8339815191529181156130e7576001830154600884015460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb906044016020604051808303816000875af19250505080156130d8575060408051601f3d908101601f191682019092526130d591810190614654565b60015b6130e557600091506130e7565b505b8015613170576002830154600884015460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810184905291169063a9059cbb906044016020604051808303816000875af1925050508015613162575060408051601f3d908101601f1916820190925261315f91810190614654565b60015b61316e57506000613170565b505b60408051838152602081018390527fa292e28c648da34e20b372054caab5f0359198b3b4d5f0ef9945d4616e15dc979101610cd4565b6001600160a01b0382166131fc5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610a46565b806067600082825461320e9190614227565b90915550506001600160a01b0382166000908152606560205260408120805483929061323b908490614227565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6000805160206146bb8339815191526132be7fe3ad27f6776c50a3e2a472a1ca98705922a7e91abcd31c1ccc4121e91e8cee4233612fb1565b6132ef5760405162461bcd60e51b8152602060048201526002602482015261434360f01b6044820152606401610a46565b821561330e57600181015461330e906001600160a01b0316338561378d565b8115612866576002810154612866906001600160a01b0316338461378d565b6001600160a01b03821661338d5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610a46565b6001600160a01b038216600090815260656020526040902054818110156134015760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610a46565b6001600160a01b0383166000908152606560205260408120838303905560678054849290613430908490614671565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6001600160a01b0381163b6134f85760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152608401610a46565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b613542836137f4565b60008251118061354f5750805b15612866576120ed8383613834565b600054610100900460ff166135c95760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610a46565b81516135dc906068906020850190613c0b565b508051612866906069906020840190613c0b565b600054610100900460ff166119935760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610a46565b60006109b6836001600160a01b03841661393f565b60008181526001830160205260408120548015613759576000613694600183614671565b85549091506000906136a890600190614671565b905081811461370d5760008660000182815481106136c8576136c86142e4565b90600052602060002001549050808760000184815481106136eb576136eb6142e4565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061371e5761371e614688565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610991565b6000915050610991565b600082600001828154811061377a5761377a6142e4565b9060005260206000200154905092915050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b17905261286690849061398e565b6137fd8161347b565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b6138b35760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e747261637400000000000000000000000000000000000000000000000000006064820152608401610a46565b600080846001600160a01b0316846040516138ce919061469e565b600060405180830381855af49150503d8060008114613909576040519150601f19603f3d011682016040523d82523d6000602084013e61390e565b606091505b509150915061393682826040518060600160405280602781526020016146db60279139613a73565b95945050505050565b600081815260018301602052604081205461398657508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610991565b506000610991565b60006139e3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316613aac9092919063ffffffff16565b8051909150156128665780806020019051810190613a019190614654565b6128665760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610a46565b60608315613a825750816109b6565b825115613a925782518084602001fd5b8160405162461bcd60e51b8152600401610a469190613cd0565b6060613abb8484600085613ac3565b949350505050565b606082471015613b3b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610a46565b6001600160a01b0385163b613b925760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610a46565b600080866001600160a01b03168587604051613bae919061469e565b60006040518083038185875af1925050503d8060008114613beb576040519150601f19603f3d011682016040523d82523d6000602084013e613bf0565b606091505b5091509150613c00828286613a73565b979650505050505050565b828054613c17906141d7565b90600052602060002090601f016020900481019282613c395760008555613c7f565b82601f10613c5257805160ff1916838001178555613c7f565b82800160010185558215613c7f579182015b82811115613c7f578251825591602001919060010190613c64565b50613c8b929150613c8f565b5090565b5b80821115613c8b5760008155600101613c90565b60005b83811015613cbf578181015183820152602001613ca7565b838111156120ed5750506000910152565b6020815260008251806020840152613cef816040850160208701613ca4565b601f01601f19169190910160400192915050565b6001600160a01b0381168114610b3a57600080fd5b8035612aee81613d03565b60008060408385031215613d3657600080fd5b8235613d4181613d03565b946020939093013593505050565b600080600060608486031215613d6457600080fd5b8335613d6f81613d03565b92506020840135613d7f81613d03565b929592945050506040919091013590565b600060208284031215613da257600080fd5b81356109b681613d03565b60008060408385031215613dc057600080fd5b50508035926020909101359150565b600060208284031215613de157600080fd5b813561ffff811681146109b657600080fd5b60008083601f840112613e0557600080fd5b50813567ffffffffffffffff811115613e1d57600080fd5b602083019150836020828501011115613e3557600080fd5b9250929050565b600080600080600060608688031215613e5457600080fd5b853567ffffffffffffffff80821115613e6c57600080fd5b613e7889838a01613df3565b90975095506020880135915080821115613e9157600080fd5b613e9d89838a01613df3565b90955093506040880135915080821115613eb657600080fd5b5086016101208189031215613eca57600080fd5b809150509295509295909350565b60008083601f840112613eea57600080fd5b50813567ffffffffffffffff811115613f0257600080fd5b6020830191508360208260051b8501011115613e3557600080fd5b60008060208385031215613f3057600080fd5b823567ffffffffffffffff811115613f4757600080fd5b613f5385828601613ed8565b90969095509350505050565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215613f8857600080fd5b8235613f9381613d03565b9150602083013567ffffffffffffffff80821115613fb057600080fd5b818501915085601f830112613fc457600080fd5b813581811115613fd657613fd6613f5f565b604051601f8201601f19908116603f01168101908382118183101715613ffe57613ffe613f5f565b8160405282815288602084870101111561401757600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b602080825282518282018190526000919060409081850190868401855b828110156140915781518051600290810b865287820151900b8786015285015162ffffff168585015260609093019290850190600101614056565b5091979650505050505050565b6020808252825182820181905260009190848201906040850190845b818110156140df5783516001600160a01b0316835292840192918401916001016140ba565b50909695505050505050565b6000602082840312156140fd57600080fd5b813567ffffffffffffffff81111561411457600080fd5b820160e081850312156109b657600080fd5b6000806040838503121561413957600080fd5b82359150602083013561414b81613d03565b809150509250929050565b6000806000806060858703121561416c57600080fd5b8435935060208501359250604085013567ffffffffffffffff81111561419157600080fd5b61419d87828801613df3565b95989497509550505050565b600080604083850312156141bc57600080fd5b82356141c781613d03565b9150602083013561414b81613d03565b600181811c908216806141eb57607f821691505b60208210810361420b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561423a5761423a614211565b500190565b6000808335601e1984360301811261425657600080fd5b83018035915067ffffffffffffffff82111561427157600080fd5b6020019150600581901b3603821315613e3557600080fd5b803562ffffff81168114612aee57600080fd5b60208082528181018390526000908460408401835b868110156142d95762ffffff6142c684614289565b16825291830191908301906001016142b1565b509695505050505050565b634e487b7160e01b600052603260045260246000fd5b60006001820161430c5761430c614211565b5060010190565b60208082528181018390526000908460408401835b868110156142d957823561433b81613d03565b6001600160a01b031682529183019190830190600101614328565b6000808335601e1984360301811261436d57600080fd5b830160208101925035905067ffffffffffffffff81111561438d57600080fd5b8060071b3603831315613e3557600080fd5b8035600281900b8114612aee57600080fd5b818352600060208085019450826000805b8681101561443e5782356fffffffffffffffffffffffffffffffff81168082146143ea578384fd5b8952506143f883850161439f565b600290810b8986015260409061440f85830161439f565b900b90890152606062ffffff614426858301614289565b169089015260809788019792909201916001016143c2565b50959695505050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b8015158114610b3a57600080fd5b8035612aee81614473565b60008135601e198336030181126144a257600080fd5b8201803567ffffffffffffffff8111156144bb57600080fd5b8036038413156144ca57600080fd5b60a085526144df60a08601826020850161444a565b9150506144ee60208401613d18565b6001600160a01b038116602086015250604083013560408501526060830135606085015261451e60808401614481565b80151560808601526118c6565b60208152600061453b8384614356565b60e06020850152614551610100850182846143b1565b9150506145616020850185614356565b601f19808685030160408701526145798483856143b1565b935060408701359250609e1987360301831261459457600080fd5b858403016060860152506145aa8282870161448c565b91505060608401356080840152608084013560a084015260a084013560c084015260c084013560e08401528091505092915050565b600080604083850312156145f257600080fd5b505080516020909101519092909150565b60006020828403121561461557600080fd5b5051919050565b60006020828403121561462e57600080fd5b6109b682614289565b60006020828403121561464957600080fd5b81516109b681613d03565b60006020828403121561466657600080fd5b81516109b681614473565b60008282101561468357614683614211565b500390565b634e487b7160e01b600052603160045260246000fd5b600082516146b0818460208701613ca4565b919091019291505056fee3ad27f6776c50a3e2a472a1ca98705922a7e91abcd31c1ccc4121e91e8cee38416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212203a4819840118f4197fe8adbe4d9eed1487f4197c3ad69669f406a97cc577385264736f6c634300080d0033496e697469616c697a61626c653a20636f6e747261637420697320616c726561";

type ArrakisV2ConstructorParams =
  | [linkLibraryAddresses: ArrakisV2LibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArrakisV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class ArrakisV2__factory extends ContractFactory {
  constructor(...args: ArrakisV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        ArrakisV2__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(linkLibraryAddresses: ArrakisV2LibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$31e7c80c9858d74690b1c93860b2d1be06\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/Invest.sol:Invest"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ArrakisV2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ArrakisV2__factory {
    return super.connect(runner) as ArrakisV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArrakisV2Interface {
    return new Interface(_abi) as ArrakisV2Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): ArrakisV2 {
    return new Contract(address, _abi, runner) as unknown as ArrakisV2;
  }
}

export interface ArrakisV2LibraryAddresses {
  ["contracts/libraries/Invest.sol:Invest"]: string;
}
