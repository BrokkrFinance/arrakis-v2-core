/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Position,
  PositionInterface,
} from "../../../contracts/libraries/Position";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IUniswapV3Pool",
        name: "pool_",
        type: "IUniswapV3Pool",
      },
      {
        internalType: "address",
        name: "self_",
        type: "address",
      },
      {
        internalType: "int24",
        name: "lowerTick_",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "upperTick_",
        type: "int24",
      },
    ],
    name: "getLiquidityByRange",
    outputs: [
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "self_",
        type: "address",
      },
      {
        internalType: "int24",
        name: "lowerTick_",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "upperTick_",
        type: "int24",
      },
    ],
    name: "getPositionId",
    outputs: [
      {
        internalType: "bytes32",
        name: "positionId",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "lowerTick",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "upperTick",
            type: "int24",
          },
          {
            internalType: "uint24",
            name: "feeTier",
            type: "uint24",
          },
        ],
        internalType: "struct Range[]",
        name: "currentRanges_",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "int24",
            name: "lowerTick",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "upperTick",
            type: "int24",
          },
          {
            internalType: "uint24",
            name: "feeTier",
            type: "uint24",
          },
        ],
        internalType: "struct Range",
        name: "range_",
        type: "tuple",
      },
    ],
    name: "rangeExists",
    outputs: [
      {
        internalType: "bool",
        name: "ok",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61060361003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c80630c3c0bfc146100505780631208efca1461007f5780635f49415b146100ee575b600080fd5b61006361005e366004610395565b610122565b6040805192151583526020830191909152015b60405180910390f35b6100e061008d36600461047c565b6040516bffffffffffffffffffffffff19606085901b16602082015260e883811b603483015282901b6037820152600090603a016040516020818303038152906040528051906020012090509392505050565b604051908152602001610076565b6101016100fc3660046104c1565b6101ed565b6040516fffffffffffffffffffffffffffffffff9091168152602001610076565b60008060005b84518110156101e55784818151811061014357610143610519565b60200260200101516000015160020b846000015160020b14801561018d575084818151811061017457610174610519565b60200260200101516020015160020b846020015160020b145b80156101c357508481815181106101a6576101a6610519565b60200260200101516040015162ffffff16846040015162ffffff16145b925082156101d3578091506101e5565b806101dd8161052f565b915050610128565b509250929050565b604080516bffffffffffffffffffffffff19606086901b1660208083019190915260e885811b603484015284901b60378301528251808303601a018152603a830193849052805191012063514ea4bf60e01b909252603e81019190915260009073ffffffffffffffffffffffffffffffffffffffff86169063514ea4bf90605e0160a060405180830381865afa15801561028b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102af9190610576565b509298975050505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156102fc576102fc6102bd565b604052919050565b8035600281900b811461031657600080fd5b919050565b60006060828403121561032d57600080fd5b6040516060810181811067ffffffffffffffff82111715610350576103506102bd565b60405290508061035f83610304565b815261036d60208401610304565b6020820152604083013562ffffff8116811461038857600080fd5b6040919091015292915050565b600080608083850312156103a857600080fd5b823567ffffffffffffffff808211156103c057600080fd5b818501915085601f8301126103d457600080fd5b81356020828211156103e8576103e86102bd565b6103f6818360051b016102d3565b8281528181019350606092830285018201928984111561041557600080fd5b948201945b8386101561043b5761042c8a8761031b565b8552948501949382019361041a565b50955061044a8888830161031b565b9450505050509250929050565b73ffffffffffffffffffffffffffffffffffffffff8116811461047957600080fd5b50565b60008060006060848603121561049157600080fd5b833561049c81610457565b92506104aa60208501610304565b91506104b860408501610304565b90509250925092565b600080600080608085870312156104d757600080fd5b84356104e281610457565b935060208501356104f281610457565b925061050060408601610304565b915061050e60608601610304565b905092959194509250565b634e487b7160e01b600052603260045260246000fd5b60006001820161054f57634e487b7160e01b600052601160045260246000fd5b5060010190565b80516fffffffffffffffffffffffffffffffff8116811461031657600080fd5b600080600080600060a0868803121561058e57600080fd5b61059786610556565b945060208601519350604086015192506105b360608701610556565b91506105c160808701610556565b9050929550929590935056fea2646970667358221220be645a450ef790af27bc76a8988d84dc44cd89fb92f5cbea3fed1c9e1825e8c964736f6c634300080d0033";

type PositionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PositionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Position__factory extends ContractFactory {
  constructor(...args: PositionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Position & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Position__factory {
    return super.connect(runner) as Position__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PositionInterface {
    return new Interface(_abi) as PositionInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Position {
    return new Contract(address, _abi, runner) as unknown as Position;
  }
}
