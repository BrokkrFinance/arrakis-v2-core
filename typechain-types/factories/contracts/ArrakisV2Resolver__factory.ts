/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ArrakisV2Resolver,
  ArrakisV2ResolverInterface,
} from "../../contracts/ArrakisV2Resolver";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IUniswapV3Factory",
        name: "factory_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract IUniswapV3Factory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtPriceX96_",
        type: "uint160",
      },
      {
        internalType: "int24",
        name: "lowerTick_",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "upperTick_",
        type: "int24",
      },
      {
        internalType: "int128",
        name: "liquidity_",
        type: "int128",
      },
    ],
    name: "getAmountsForLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IArrakisV2",
        name: "vaultV2_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0Max_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Max_",
        type: "uint256",
      },
    ],
    name: "getMintAmounts",
    outputs: [
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "mintAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr_",
        type: "address",
      },
      {
        internalType: "int24",
        name: "lowerTick_",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "upperTick_",
        type: "int24",
      },
    ],
    name: "getPositionId",
    outputs: [
      {
        internalType: "bytes32",
        name: "positionId",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "int24",
                name: "lowerTick",
                type: "int24",
              },
              {
                internalType: "int24",
                name: "upperTick",
                type: "int24",
              },
              {
                internalType: "uint24",
                name: "feeTier",
                type: "uint24",
              },
            ],
            internalType: "struct Range",
            name: "range",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "weight",
            type: "uint256",
          },
        ],
        internalType: "struct RangeWeight[]",
        name: "rangeWeights_",
        type: "tuple[]",
      },
      {
        internalType: "contract IArrakisV2",
        name: "vaultV2_",
        type: "address",
      },
    ],
    name: "standardRebalance",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                components: [
                  {
                    internalType: "int24",
                    name: "lowerTick",
                    type: "int24",
                  },
                  {
                    internalType: "int24",
                    name: "upperTick",
                    type: "int24",
                  },
                  {
                    internalType: "uint24",
                    name: "feeTier",
                    type: "uint24",
                  },
                ],
                internalType: "struct Range",
                name: "range",
                type: "tuple",
              },
            ],
            internalType: "struct PositionLiquidity[]",
            name: "burns",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint128",
                name: "liquidity",
                type: "uint128",
              },
              {
                components: [
                  {
                    internalType: "int24",
                    name: "lowerTick",
                    type: "int24",
                  },
                  {
                    internalType: "int24",
                    name: "upperTick",
                    type: "int24",
                  },
                  {
                    internalType: "uint24",
                    name: "feeTier",
                    type: "uint24",
                  },
                ],
                internalType: "struct Range",
                name: "range",
                type: "tuple",
              },
            ],
            internalType: "struct PositionLiquidity[]",
            name: "mints",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes",
                name: "payload",
                type: "bytes",
              },
              {
                internalType: "address",
                name: "router",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "expectedMinReturn",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "zeroForOne",
                type: "bool",
              },
            ],
            internalType: "struct SwapPayload",
            name: "swap",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "minBurn0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minBurn1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minDeposit0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minDeposit1",
            type: "uint256",
          },
        ],
        internalType: "struct Rebalance",
        name: "rebalanceParams",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200257e3803806200257e833981016040819052620000349162000046565b6001600160a01b031660805262000078565b6000602082840312156200005957600080fd5b81516001600160a01b03811681146200007157600080fd5b9392505050565b6080516124cf620000af6000396000818160bf015281816104720152818161068501528181610b330152610eb001526124cf6000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063c45a015511610050578063c45a0155146100ba578063c49f25af146100f9578063fa111ce71461011957600080fd5b80631208efca1461006c57806392bb0ac814610092575b600080fd5b61007f61007a366004611b7e565b610147565b6040519081526020015b60405180910390f35b6100a56100a0366004611bc9565b6101e2565b60408051928352602083019190915201610089565b6100e17f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610089565b61010c610107366004611cff565b6102a0565b6040516100899190611e92565b61012c610127366004611f9d565b610cc4565b60408051938452602084019290925290820152606001610089565b60405163090477e560e11b81526001600160a01b0384166004820152600283810b602483015282900b604482015260009073__$b131e44167300e1b6d47510635310686a7$__90631208efca90606401602060405180830381865af41580156101b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d89190611fd2565b90505b9392505050565b60008073__$3d23d8578387a47facd93bb77f6fe6e81b$__63f05adb5e8761020988611392565b61021288611392565b60405160e085901b6001600160e01b03191681526001600160a01b03938416600482015291831660248301529091166044820152600f86900b60648201526084016040805180830381865af415801561026f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102939190611feb565b9150915094509492505050565b6102a8611adf565b6000806000806000866001600160a01b031663617a34196040518163ffffffff1660e01b8152600401600060405180830381865afa1580156102ee573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610316919081019061200f565b9050866001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610356573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037a91906120e8565b9250866001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103de91906120e8565b915073__$3d23d8578387a47facd93bb77f6fe6e81b$__63e56f4d916040518060a001604052808a6001600160a01b031663617a34196040518163ffffffff1660e01b8152600401600060405180830381865afa158015610443573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261046b919081019061200f565b81526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020018a6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050191906120e8565b6001600160a01b031681526020018a6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561054d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057191906120e8565b6001600160a01b031681526020018a6001600160a01b03168152506040518263ffffffff1660e01b81526004016105a891906121d7565b608060405180830381865af41580156105c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e991906121ea565b50508251919650945060009067ffffffffffffffff81111561060d5761060d611c2c565b60405190808252806020026020018201604052801561067157816020015b61065e60408051808201825260008082528251606081018452818152602081810183905293810191909152909182015290565b81526020019060019003908161062b5790505b5090506000805b835181101561091d5760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631698ee8288888886815181106106c6576106c6612220565b602090810291909101015160409081015190516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015262ffffff166044820152606401602060405180830381865afa15801561072d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075191906120e8565b6001600160a01b031663514ea4bf73__$b131e44167300e1b6d47510635310686a7$__631208efca8e89878151811061078c5761078c612220565b6020026020010151600001518a88815181106107aa576107aa612220565b60209081029190910181015101516040516001600160e01b031960e086901b1681526001600160a01b039093166004840152600291820b6024840152900b6044820152606401602060405180830381865af415801561080d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108319190611fd2565b6040518263ffffffff1660e01b815260040161084f91815260200190565b60a060405180830381865afa15801561086c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610890919061224d565b5092935050506001600160801b0382161590506108b557826108b1816122ba565b9350505b6040518060400160405280826001600160801b031681526020018684815181106108e1576108e1612220565b60200260200101518152508483815181106108fe576108fe612220565b6020026020010181905250508080610915906122ba565b915050610678565b508067ffffffffffffffff81111561093757610937611c2c565b60405190808252806020026020018201604052801561099b57816020015b61098860408051808201825260008082528251606081018452818152602081810183905293810191909152909182015290565b8152602001906001900390816109555790505b5088526000805b8351811015610a365760008482815181106109bf576109bf612220565b6020026020010151600001516001600160801b03161115610a24578381815181106109ec576109ec612220565b60200260200101518a600001518381518110610a0a57610a0a612220565b60200260200101819052508180610a20906122ba565b9250505b80610a2e816122ba565b9150506109a2565b5050505050610a44876117bf565b865167ffffffffffffffff811115610a5e57610a5e611c2c565b604051908082528060200260200182016040528015610ac257816020015b610aaf60408051808201825260008082528251606081018452818152602081810183905293810191909152909182015290565b815260200190600190039081610a7c5790505b50602086015260005b8751811015610cb9576000888281518110610ae857610ae8612220565b602090810291909101015180516040908101519051630b4c774160e11b81526001600160a01b038781166004830152868116602483015262ffffff90921660448201529192506000917f000000000000000000000000000000000000000000000000000000000000000090911690631698ee8290606401602060405180830381865afa158015610b7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba091906120e8565b6001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015610bdd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0191906122e5565b50505050505090506000610c5e82610c20856000015160000151611392565b855160200151610c2f90611392565b610c448c886020015161271061ffff16611860565b610c598c896020015161271061ffff16611860565b61190e565b90506040518060400160405280826001600160801b03168152602001846000015181525089602001518581518110610c9857610c98612220565b60200260200101819052505050508080610cb1906122ba565b915050610acb565b505050505092915050565b600080600080866001600160a01b031663617a34196040518163ffffffff1660e01b8152600401600060405180830381865afa158015610d08573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d30919081019061200f565b5190508581108015610d4157508481105b610db85760405162461bcd60e51b815260206004820152603660248201527f6d617820616d6f756e74732073686f756c64206265206869676865722074686160448201527f6e20746865206e756d626572206f662072616e6765730000000000000000000060648201526084015b60405180910390fd5b610dc28187612382565b9550610dce8186612382565b94506000876001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e349190611fd2565b905060006040518060a001604052808a6001600160a01b031663617a34196040518163ffffffff1660e01b8152600401600060405180830381865afa158015610e81573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ea9919081019061200f565b81526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020018a6001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3f91906120e8565b6001600160a01b031681526020018a6001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610faf91906120e8565b6001600160a01b0390811682528b166020909101529050811561116a5760008073__$3d23d8578387a47facd93bb77f6fe6e81b$__6383d7ba9f8486876040518463ffffffff1660e01b815260040161100a93929190612399565b6040805180830381865af4158015611026573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104a9190611feb565b60405163c30fc38d60e01b8152600481018390526024810182905260448101879052606481018d9052608481018c9052919350915073__$3d23d8578387a47facd93bb77f6fe6e81b$__9063c30fc38d9060a401602060405180830381865af41580156110bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110df9190611fd2565b6040516383d7ba9f60e01b815290965073__$3d23d8578387a47facd93bb77f6fe6e81b$__906383d7ba9f9061111d9086908a908990600401612399565b6040805180830381865af4158015611139573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115d9190611feb565b9098509650611386915050565b73__$3d23d8578387a47facd93bb77f6fe6e81b$";

type ArrakisV2ResolverConstructorParams =
  | [linkLibraryAddresses: ArrakisV2ResolverLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArrakisV2ResolverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class ArrakisV2Resolver__factory extends ContractFactory {
  constructor(...args: ArrakisV2ResolverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        ArrakisV2Resolver__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ArrakisV2ResolverLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$b131e44167300e1b6d47510635310686a7\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/Position.sol:Position"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$3d23d8578387a47facd93bb77f6fe6e81b\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/Underlying.sol:Underlying"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    factory_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(factory_, overrides || {});
  }
  override deploy(
    factory_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(factory_, overrides || {}) as Promise<
      ArrakisV2Resolver & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ArrakisV2Resolver__factory {
    return super.connect(runner) as ArrakisV2Resolver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArrakisV2ResolverInterface {
    return new Interface(_abi) as ArrakisV2ResolverInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ArrakisV2Resolver {
    return new Contract(address, _abi, runner) as unknown as ArrakisV2Resolver;
  }
}

export interface ArrakisV2ResolverLibraryAddresses {
  ["contracts/libraries/Position.sol:Position"]: string;
  ["contracts/libraries/Underlying.sol:Underlying"]: string;
}
