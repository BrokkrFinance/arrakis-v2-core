/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ArrakisV2Helper,
  ArrakisV2HelperInterface,
} from "../../contracts/ArrakisV2Helper";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IUniswapV3Factory",
        name: "factory_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract IUniswapV3Factory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "lowerTick",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "upperTick",
            type: "int24",
          },
          {
            internalType: "uint24",
            name: "feeTier",
            type: "uint24",
          },
        ],
        internalType: "struct Range[]",
        name: "ranges_",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "token0_",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1_",
        type: "address",
      },
      {
        internalType: "address",
        name: "vaultV2_",
        type: "address",
      },
    ],
    name: "token0AndToken1ByRange",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "int24",
                name: "lowerTick",
                type: "int24",
              },
              {
                internalType: "int24",
                name: "upperTick",
                type: "int24",
              },
              {
                internalType: "uint24",
                name: "feeTier",
                type: "uint24",
              },
            ],
            internalType: "struct Range",
            name: "range",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct Amount[]",
        name: "amount0s",
        type: "tuple[]",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "int24",
                name: "lowerTick",
                type: "int24",
              },
              {
                internalType: "int24",
                name: "upperTick",
                type: "int24",
              },
              {
                internalType: "uint24",
                name: "feeTier",
                type: "uint24",
              },
            ],
            internalType: "struct Range",
            name: "range",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct Amount[]",
        name: "amount1s",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "lowerTick",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "upperTick",
            type: "int24",
          },
          {
            internalType: "uint24",
            name: "feeTier",
            type: "uint24",
          },
        ],
        internalType: "struct Range[]",
        name: "ranges_",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "token0_",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1_",
        type: "address",
      },
      {
        internalType: "address",
        name: "vaultV2_",
        type: "address",
      },
    ],
    name: "token0AndToken1PlusFeesByRange",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "int24",
                name: "lowerTick",
                type: "int24",
              },
              {
                internalType: "int24",
                name: "upperTick",
                type: "int24",
              },
              {
                internalType: "uint24",
                name: "feeTier",
                type: "uint24",
              },
            ],
            internalType: "struct Range",
            name: "range",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct Amount[]",
        name: "amount0s",
        type: "tuple[]",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "int24",
                name: "lowerTick",
                type: "int24",
              },
              {
                internalType: "int24",
                name: "upperTick",
                type: "int24",
              },
              {
                internalType: "uint24",
                name: "feeTier",
                type: "uint24",
              },
            ],
            internalType: "struct Range",
            name: "range",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct Amount[]",
        name: "amount1s",
        type: "tuple[]",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "int24",
                name: "lowerTick",
                type: "int24",
              },
              {
                internalType: "int24",
                name: "upperTick",
                type: "int24",
              },
              {
                internalType: "uint24",
                name: "feeTier",
                type: "uint24",
              },
            ],
            internalType: "struct Range",
            name: "range",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct Amount[]",
        name: "fee0s",
        type: "tuple[]",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "int24",
                name: "lowerTick",
                type: "int24",
              },
              {
                internalType: "int24",
                name: "upperTick",
                type: "int24",
              },
              {
                internalType: "uint24",
                name: "feeTier",
                type: "uint24",
              },
            ],
            internalType: "struct Range",
            name: "range",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct Amount[]",
        name: "fee1s",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IArrakisV2",
        name: "vault_",
        type: "address",
      },
    ],
    name: "totalLiquidity",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            components: [
              {
                internalType: "int24",
                name: "lowerTick",
                type: "int24",
              },
              {
                internalType: "int24",
                name: "upperTick",
                type: "int24",
              },
              {
                internalType: "uint24",
                name: "feeTier",
                type: "uint24",
              },
            ],
            internalType: "struct Range",
            name: "range",
            type: "tuple",
          },
        ],
        internalType: "struct PositionLiquidity[]",
        name: "liquidities",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IArrakisV2",
        name: "vault_",
        type: "address",
      },
    ],
    name: "totalUnderlying",
    outputs: [
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IArrakisV2",
        name: "vault_",
        type: "address",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceX96_",
        type: "uint160",
      },
    ],
    name: "totalUnderlyingAtPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IArrakisV2",
        name: "vault_",
        type: "address",
      },
    ],
    name: "totalUnderlyingWithFees",
    outputs: [
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fee0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fee1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IArrakisV2",
        name: "vault_",
        type: "address",
      },
    ],
    name: "totalUnderlyingWithFeesAndLeftOver",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fee1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "leftOver0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "leftOver1",
            type: "uint256",
          },
        ],
        internalType: "struct UnderlyingOutput",
        name: "underlying",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161203a38038061203a83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051611f856100b56000396000818161014901528181610282015281816104a301528181610c7701528181610f18015281816112b3015261167b0152611f856000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a75468021161005b578063a754680214610131578063c45a015514610144578063c56326de14610183578063e9b7218a146101a357600080fd5b80630f8f2d1d1461008d5780636ea08e2a146100c55780638fe5a01e146100ed578063943865551461010e575b600080fd5b6100a061009b36600461182c565b610202565b6040805194855260208501939093529183015260608201526080015b60405180910390f35b6100d86100d336600461182c565b610426565b604080519283526020830191909152016100bc565b6101006100fb366004611850565b610644565b6040516100bc92919061196c565b61012161011c366004611850565b61083e565b6040516100bc949392919061199a565b6100d861013f3660046119f2565b610bfa565b61016b7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100bc565b61019661019136600461182c565b610e1b565b6040516100bc9190611a2b565b6101b66101b136600461182c565b611200565b6040516100bc9190600060c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015292915050565b60008060008060006040518060a00160405280876001600160a01b031663617a34196040518163ffffffff1660e01b8152600401600060405180830381865afa158015610253573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261027b9190810190611b48565b81526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602001876001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103119190611c37565b6001600160a01b03168152602001876001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561035d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103819190611c37565b6001600160a01b03168152602001876001600160a01b0316815250905073__$3d23d8578387a47facd93bb77f6fe6e81b$__63e56f4d91826040518263ffffffff1660e01b81526004016103d59190611d26565b608060405180830381865af41580156103f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104169190611d39565b9299919850965090945092505050565b60008060006040518060a00160405280856001600160a01b031663617a34196040518163ffffffff1660e01b8152600401600060405180830381865afa158015610474573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261049c9190810190611b48565b81526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602001856001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561050e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105329190611c37565b6001600160a01b03168152602001856001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561057e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a29190611c37565b6001600160a01b03168152602001856001600160a01b0316815250905073__$3d23d8578387a47facd93bb77f6fe6e81b$__63e56f4d91826040518263ffffffff1660e01b81526004016105f69190611d26565b608060405180830381865af4158015610613573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106379190611d39565b5091969095509350505050565b6060808567ffffffffffffffff81111561066057610660611ab8565b6040519080825280602002602001820160405280156106bb57816020015b6040805160a081018252600091810182815260608201839052608082018390528152602081019190915281526020019060019003908161067e5790505b5091508567ffffffffffffffff8111156106d7576106d7611ab8565b60405190808252806020026020018201604052801561073257816020015b6040805160a08101825260009181018281526060820183905260808201839052815260208101919091528152602001906001900390816106f55790505b50905060005b868110156108335760008061076688888c8c8781811061075a5761075a611d6f565b90506060020189611641565b50509150915060405180604001604052808b8b8681811061078957610789611d6f565b90506060020180360381019061079f9190611d85565b8152602001838152508584815181106107ba576107ba611d6f565b602002602001018190525060405180604001604052808b8b868181106107e2576107e2611d6f565b9050606002018036038101906107f89190611d85565b81526020018281525084848151811061081357610813611d6f565b60200260200101819052505050808061082b90611e0d565b915050610738565b509550959350505050565b60608080808767ffffffffffffffff81111561085c5761085c611ab8565b6040519080825280602002602001820160405280156108b757816020015b6040805160a081018252600091810182815260608201839052608082018390528152602081019190915281526020019060019003908161087a5790505b5093508767ffffffffffffffff8111156108d3576108d3611ab8565b60405190808252806020026020018201604052801561092e57816020015b6040805160a08101825260009181018281526060820183905260808201839052815260208101919091528152602001906001900390816108f15790505b5092508767ffffffffffffffff81111561094a5761094a611ab8565b6040519080825280602002602001820160405280156109a557816020015b6040805160a08101825260009181018281526060820183905260808201839052815260208101919091528152602001906001900390816109685790505b5091508767ffffffffffffffff8111156109c1576109c1611ab8565b604051908082528060200260200182016040528015610a1c57816020015b6040805160a08101825260009181018281526060820183905260808201839052815260208101919091528152602001906001900390816109df5790505b50905060005b88811015610bed57898982818110610a3c57610a3c611d6f565b905060600201803603810190610a529190611d85565b858281518110610a6457610a64611d6f565b602090810291909101015152898982818110610a8257610a82611d6f565b905060600201803603810190610a989190611d85565b848281518110610aaa57610aaa611d6f565b602090810291909101015152898982818110610ac857610ac8611d6f565b905060600201803603810190610ade9190611d85565b838281518110610af057610af0611d6f565b602090810291909101015152898982818110610b0e57610b0e611d6f565b905060600201803603810190610b249190611d85565b828281518110610b3657610b36611d6f565b602090810291909101015152610b5988888c8c8581811061075a5761075a611d6f565b888581518110610b6b57610b6b611d6f565b6020026020010151602001888681518110610b8857610b88611d6f565b6020026020010151602001888781518110610ba557610ba5611d6f565b6020026020010151602001888881518110610bc257610bc2611d6f565b6020908102919091018101510193909352929091529190525280610be581611e0d565b915050610a22565b5095509550955095915050565b60008060006040518060a00160405280866001600160a01b031663617a34196040518163ffffffff1660e01b8152600401600060405180830381865afa158015610c48573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c709190810190611b48565b81526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602001866001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ce2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d069190611c37565b6001600160a01b03168152602001866001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d769190611c37565b6001600160a01b03168152602001866001600160a01b0316815250905073__$3d23d8578387a47facd93bb77f6fe6e81b$__63bc42120082866040518363ffffffff1660e01b8152600401610dcc929190611e26565b608060405180830381865af4158015610de9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e0d9190611d39565b509197909650945050505050565b60606000826001600160a01b031663617a34196040518163ffffffff1660e01b8152600401600060405180830381865afa158015610e5d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e859190810190611b48565b9050805167ffffffffffffffff811115610ea157610ea1611ab8565b604051908082528060200260200182016040528015610f0557816020015b610ef260408051808201825260008082528251606081018452818152602081810183905293810191909152909182015290565b815260200190600190039081610ebf5790505b50915060005b81518110156111f95760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631698ee82866001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa79190611c37565b876001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fe5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110099190611c37565b86868151811061101b5761101b611d6f565b602090810291909101015160409081015190516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015262ffffff166044820152606401602060405180830381865afa158015611082573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a69190611c37565b9050600073__$b131e44167300e1b6d47510635310686a7$__635f49415b83888787815181106110d8576110d8611d6f565b6020026020010151600001518888815181106110f6576110f6611d6f565b60209081029190910181015101516040516001600160e01b031960e087901b1681526001600160a01b039485166004820152939092166024840152600290810b60448401520b6064820152608401602060405180830381865af4158015611161573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111859190611e51565b90506040518060400160405280826fffffffffffffffffffffffffffffffff1681526020018585815181106111bc576111bc611d6f565b60200260200101518152508584815181106111d9576111d9611d6f565b6020026020010181905250505080806111f190611e0d565b915050610f0b565b5050919050565b6112396040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60006040518060a00160405280846001600160a01b031663617a34196040518163ffffffff1660e01b8152600401600060405180830381865afa158015611284573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112ac9190810190611b48565b81526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602001846001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561131e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113429190611c37565b6001600160a01b03168152602001846001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561138e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b29190611c37565b6001600160a01b03168152602001846001600160a01b0316815250905073__$3d23d8578387a47facd93bb77f6fe6e81b$__63e56f4d91826040518263ffffffff1660e01b81526004016114069190611d26565b608060405180830381865af4158015611423573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114479190611d39565b60608601526040808601919091526020808601929092529184526080830151825163065756db60e01b815292516001600160a01b039091169263065756db9260048083019391928290030181865afa1580156114a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114cb9190611e83565b604080830151608084015191516370a0823160e01b81526001600160a01b0392831660048201529116906370a0823190602401602060405180830381865afa15801561151b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153f9190611e83565b6115499190611e9c565b82608001818152505080608001516001600160a01b03166342fb9d446040518163ffffffff1660e01b8152600401602060405180830381865afa158015611594573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115b89190611e83565b606082015160808301516040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa158015611608573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061162c9190611e83565b6116369190611e9c565b60a083015250919050565b600080600080866001600160a01b0316886001600160a01b03161061166757868861166a565b87875b909850965060006001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016631698ee828a8a6116b260608c0160408d01611eb3565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015262ffffff166044820152606401602060405180830381865afa158015611709573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061172d9190611c37565b905073__$3d23d8578387a47facd93bb77f6fe6e81b$__637c75bd786040518060600160405280896001600160a01b031681526020018a8036038101906117749190611d85565b8152602001846001600160a01b031681525060006040518363ffffffff1660e01b81526004016117a5929190611ed0565b608060405180830381865af41580156117c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117e69190611d39565b929750909550935091506117fa8386611f37565b94506118068285611f37565b935050945094509450949050565b6001600160a01b038116811461182957600080fd5b50565b60006020828403121561183e57600080fd5b813561184981611814565b9392505050565b60008060008060006080868803121561186857600080fd5b853567ffffffffffffffff8082111561188057600080fd5b818801915088601f83011261189457600080fd5b8135818111156118a357600080fd5b8960206060830285010111156118b857600080fd5b602092830197509550508601356118ce81611814565b925060408601356118de81611814565b915060608601356118ee81611814565b809150509295509295909350565b600081518084526020808501945080840160005b83811015611961578151611947888251805160020b8252602081015160020b602083015262ffffff60408201511660408301525050565b830151606088015260809096019590820190600101611910565b509495945050505050565b60408152600061197f60408301856118fc565b828103602084015261199181856118fc565b95945050505050565b6080815260006119ad60808301876118fc565b82810360208401526119bf81876118fc565b905082810360408401526119d381866118fc565b905082810360608401526119e781856118fc565b979650505050505050565b60008060408385031215611a0557600080fd5b8235611a1081611814565b91506020830135611a2081611814565b809150509250929050565b6020808252825182820181905260009190848201906040850190845b81811015611aac57835180516fffffffffffffffffffffffffffffffff168452850151611a9886850182805160020b8252602081015160020b602083015262ffffff60408201511660408301525050565b509284019260809290920191600101611a47565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715611af157611af1611ab8565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611b2057611b20611ab8565b604052919050565b8060020b811461182957600080fd5b62ffffff8116811461182957600080fd5b60006020808385031215611b5b57600080fd5b825167ffffffffffffffff80821115611b7357600080fd5b818501915085601f830112611b8757600080fd5b815181811115611b9957611b99611ab8565b611ba7848260051b01611af7565b81815284810192506060918202840185019188831115611bc657600080fd5b938501935b82851015611c2b5780858a031215611be35760008081fd5b611beb611ace565b8551611bf681611b28565b815285870151611c0581611b28565b81880152604086810151611c1881611b37565b9082015284529384019392850192611bcb565b50979650505050505050565b600060208284031215611c4957600080fd5b815161184981611814565b805160a080845281519084018190526000916020919082019060c0860190845b81811015611cbc57611ca9838551805160020b8252602081015160020b602083015262ffffff60408201511660408301525050565b9284019260609290920191600101611c74565b5050848301516001600160a01b03811687850152915060408501519250611cee60408701846001600160a01b03169052565b60608501519250611d0a60608701846001600160a01b03169052565b6080850151925061199160808701846001600160a01b03169052565b6020815260006118496020830184611c54565b60008060008060808587031215611d4f57600080fd5b505082516020840151604085015160609095015191969095509092509050565b634e487b7160e01b600052603260045260246000fd5b600060608284031215611d9757600080fd5b6040516060810181811067ffffffffffffffff82111715611dba57611dba611ab8565b6040528235611dc881611b28565b81526020830135611dd881611b28565b60208201526040830135611deb81611b37565b60408201529392505050565b634e487b7160e01b600052601160045260246000fd5b600060018201611e1f57611e1f611df7565b5060010190565b604081526000611e396040830185611c54565b90506001600160a01b03831660208301529392505050565b600060208284031215611e6357600080fd5b81516fffffffffffffffffffffffffffffffff8116811461184957600080fd5b600060208284031215611e9557600080fd5b5051919050565b600082821015611eae57611eae611df7565b500390565b600060208284031215611ec557600080fd5b813561184981611b37565b600060c0820190506001600160a01b038085511683526020850151611f1a6020850182805160020b8252602081015160020b602083015262ffffff60408201511660408301525050565b5080604086015116608084015280841660a0840152509392505050565b60008219821115611f4a57611f4a611df7565b50019056fea26469706673582212202762d00c7edc9161b8349ea93c04b408109e8aef878748c009158864bbc207ad64736f6c634300080d0033";

type ArrakisV2HelperConstructorParams =
  | [linkLibraryAddresses: ArrakisV2HelperLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArrakisV2HelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class ArrakisV2Helper__factory extends ContractFactory {
  constructor(...args: ArrakisV2HelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        ArrakisV2Helper__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ArrakisV2HelperLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$3d23d8578387a47facd93bb77f6fe6e81b\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/Underlying.sol:Underlying"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$b131e44167300e1b6d47510635310686a7\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/Position.sol:Position"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    factory_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(factory_, overrides || {});
  }
  override deploy(
    factory_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(factory_, overrides || {}) as Promise<
      ArrakisV2Helper & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ArrakisV2Helper__factory {
    return super.connect(runner) as ArrakisV2Helper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArrakisV2HelperInterface {
    return new Interface(_abi) as ArrakisV2HelperInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ArrakisV2Helper {
    return new Contract(address, _abi, runner) as unknown as ArrakisV2Helper;
  }
}

export interface ArrakisV2HelperLibraryAddresses {
  ["contracts/libraries/Underlying.sol:Underlying"]: string;
  ["contracts/libraries/Position.sol:Position"]: string;
}
