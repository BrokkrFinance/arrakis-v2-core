/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  SwapTest,
  SwapTestInterface,
} from "../../../contracts/__mocks__/SwapTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "bool",
        name: "zeroForOne",
        type: "bool",
      },
      {
        internalType: "int256",
        name: "amountSpecified",
        type: "int256",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceLimitX96",
        type: "uint160",
      },
    ],
    name: "getSwapResult",
    outputs: [
      {
        internalType: "int256",
        name: "amount0Delta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1Delta",
        type: "int256",
      },
      {
        internalType: "uint160",
        name: "nextSqrtRatio",
        type: "uint160",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "bool",
        name: "zeroForOne",
        type: "bool",
      },
      {
        internalType: "int256",
        name: "amountSpecified",
        type: "int256",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0Delta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1Delta",
        type: "int256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3SwapCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "int256",
        name: "amountSpecified",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "numTrades",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ratio",
        type: "uint256",
      },
    ],
    name: "washTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a53806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80635b71a46e146100515780637f2ba7bc14610066578063e13a1e61146100a1578063fa461e33146100b4575b600080fd5b61006461005f366004610670565b6100c7565b005b6100796100743660046106b1565b6101eb565b6040805193845260208401929092526001600160a01b03169082015260600160405180910390f35b6100646100af366004610704565b610313565b6100646100c236600461073f565b610468565b6000836001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015610107573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012b91906107d6565b5050505050509050836001600160a01b031663128acb083385858761015b57610156866103e861088b565b610167565b6101676103e8876108b6565b60408051336020820152016040516020818303038152906040526040518663ffffffff1660e01b81526004016101a19594939291906108de565b60408051808303816000875af11580156101bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e39190610960565b505050505050565b6000806000866001600160a01b031663128acb08338888883360405160200161022391906001600160a01b0391909116815260200190565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016102529594939291906108de565b60408051808303816000875af1158015610270573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102949190610960565b8093508194505050866001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156102da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fe91906107d6565b50979c969b5093995094975050505050505050565b60005b828110156104615760008061032b8484610984565b1190506000866001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa15801561036e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039291906107d6565b5050505050509050866001600160a01b031663128acb08338489866103c2576103bd866103e861088b565b6103ce565b6103ce6103e8876108b6565b60408051336020820152016040516020818303038152906040526040518663ffffffff1660e01b81526004016104089594939291906108de565b60408051808303816000875af1158015610426573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044a9190610960565b505050508080610459906109a6565b915050610316565b5050505050565b6000610476828401846109bf565b9050600085131561056457336001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e391906109e3565b6040516323b872dd60e01b81526001600160a01b0383811660048301523360248301526044820188905291909116906323b872dd906064016020604051808303816000875af115801561053a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055e9190610a00565b50610461565b600084131561046157336001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cf91906109e3565b6040516323b872dd60e01b81526001600160a01b0383811660048301523360248301526044820187905291909116906323b872dd906064016020604051808303816000875af1158015610626573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e39190610a00565b6001600160a01b038116811461065f57600080fd5b50565b801515811461065f57600080fd5b60008060006060848603121561068557600080fd5b83356106908161064a565b925060208401356106a081610662565b929592945050506040919091013590565b600080600080608085870312156106c757600080fd5b84356106d28161064a565b935060208501356106e281610662565b92506040850135915060608501356106f98161064a565b939692955090935050565b6000806000806080858703121561071a57600080fd5b84356107258161064a565b966020860135965060408601359560600135945092505050565b6000806000806060858703121561075557600080fd5b8435935060208501359250604085013567ffffffffffffffff8082111561077b57600080fd5b818701915087601f83011261078f57600080fd5b81358181111561079e57600080fd5b8860208285010111156107b057600080fd5b95989497505060200194505050565b805161ffff811681146107d157600080fd5b919050565b600080600080600080600060e0888a0312156107f157600080fd5b87516107fc8161064a565b8097505060208801518060020b811461081457600080fd5b9550610822604089016107bf565b9450610830606089016107bf565b935061083e608089016107bf565b925060a088015160ff8116811461085457600080fd5b60c089015190925061086581610662565b8091505092959891949750929550565b634e487b7160e01b600052601160045260246000fd5b60006001600160a01b038083168185168083038211156108ad576108ad610875565b01949350505050565b60006001600160a01b03838116908316818110156108d6576108d6610875565b039392505050565b60006001600160a01b038088168352602087151581850152866040850152818616606085015260a06080850152845191508160a085015260005b828110156109345785810182015185820160c001528101610918565b8281111561094657600060c084870101525b5050601f01601f19169190910160c0019695505050505050565b6000806040838503121561097357600080fd5b505080516020909101519092909150565b6000826109a157634e487b7160e01b600052601260045260246000fd5b500690565b6000600182016109b8576109b8610875565b5060010190565b6000602082840312156109d157600080fd5b81356109dc8161064a565b9392505050565b6000602082840312156109f557600080fd5b81516109dc8161064a565b600060208284031215610a1257600080fd5b81516109dc8161066256fea2646970667358221220745700312f243a09025af1eab2299491cfc1bc8e842fa838f7400a70429716b264736f6c634300080d0033";

type SwapTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapTest__factory extends ContractFactory {
  constructor(...args: SwapTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SwapTest & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SwapTest__factory {
    return super.connect(runner) as SwapTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapTestInterface {
    return new Interface(_abi) as SwapTestInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SwapTest {
    return new Contract(address, _abi, runner) as unknown as SwapTest;
  }
}
