/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  MockFArrakisV2Factory,
  MockFArrakisV2FactoryInterface,
} from "../../../../contracts/__mocks__/functions/MockFArrakisV2Factory";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "a_",
        type: "string",
      },
      {
        internalType: "string",
        name: "b_",
        type: "string",
      },
      {
        internalType: "string",
        name: "c_",
        type: "string",
      },
      {
        internalType: "string",
        name: "d_",
        type: "string",
      },
    ],
    name: "append",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA_",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB_",
        type: "address",
      },
    ],
    name: "getTokenOrder",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061046a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100355760003560e01c8062599e651461003a5780631b931dd214610072575b600080fd5b61004d6100483660046101f7565b610092565b604080516001600160a01b039384168152929091166020830152015b60405180910390f35b6100856100803660046102cd565b6100ab565b60405161006991906103aa565b60008061009f84846100c2565b915091505b9250929050565b60606100b9858585856101a9565b95945050505050565b600080826001600160a01b0316846001600160a01b03160361012b5760405162461bcd60e51b815260206004820152600a60248201527f73616d6520746f6b656e0000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b826001600160a01b0316846001600160a01b03161061014b57828461014e565b83835b90925090506001600160a01b0382166100a45760405162461bcd60e51b815260206004820152600f60248201527f6e6f2061646472657373207a65726f00000000000000000000000000000000006044820152606401610122565b6060848484846040516020016101c294939291906103dd565b6040516020818303038152906040529050949350505050565b80356001600160a01b03811681146101f257600080fd5b919050565b6000806040838503121561020a57600080fd5b610213836101db565b9150610221602084016101db565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261025157600080fd5b813567ffffffffffffffff8082111561026c5761026c61022a565b604051601f8301601f19908116603f011681019082821181831017156102945761029461022a565b816040528381528660208588010111156102ad57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080608085870312156102e357600080fd5b843567ffffffffffffffff808211156102fb57600080fd5b61030788838901610240565b9550602087013591508082111561031d57600080fd5b61032988838901610240565b9450604087013591508082111561033f57600080fd5b61034b88838901610240565b9350606087013591508082111561036157600080fd5b5061036e87828801610240565b91505092959194509250565b60005b8381101561039557818101518382015260200161037d565b838111156103a4576000848401525b50505050565b60208152600082518060208401526103c981604085016020870161037a565b601f01601f19169190910160400192915050565b600085516103ef818460208a0161037a565b855190830190610403818360208a0161037a565b855191019061041681836020890161037a565b845191019061042981836020880161037a565b01969550505050505056fea2646970667358221220c1c643f7518c63b98477dd91f5545d06512f11834a283d5bd3e40c4c287930a264736f6c634300080d0033";

type MockFArrakisV2FactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockFArrakisV2FactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockFArrakisV2Factory__factory extends ContractFactory {
  constructor(...args: MockFArrakisV2FactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockFArrakisV2Factory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): MockFArrakisV2Factory__factory {
    return super.connect(runner) as MockFArrakisV2Factory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockFArrakisV2FactoryInterface {
    return new Interface(_abi) as MockFArrakisV2FactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockFArrakisV2Factory {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as MockFArrakisV2Factory;
  }
}
